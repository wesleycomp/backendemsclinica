services:
  apiemsclinica-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: apiemsclinica-app

    environment:
      # runtime
      NODE_ENV: production
      TS_NODE_TRANSPILE_ONLY: "1"
      RUN_MIGRATIONS: "0"
      TYPEORM_SYNCHRONIZE: "false"
      TYPEORM_MIGRATIONS_RUN: "false"

      # for√ßar Postgres (cobre TODAS as maneiras)
      PGHOST: "128.199.14.226"
      PGPORT: "5432"
      PGUSER: "postgres"
      PGPASSWORD: "r44gru"
      PGDATABASE: "emsclinica"

      DB_HOST: "128.199.14.226"
      DB_PORT: "5432"
      DB_USERNAME: "postgres"
      DB_PASSWORD: "r44gru"
      DB_NAME: "emsclinica"

      TYPEORM_HOST: "128.199.14.226"
      TYPEORM_PORT: "5432"
      TYPEORM_USERNAME: "postgres"
      TYPEORM_PASSWORD: "r44gru"
      TYPEORM_DATABASE: "emsclinica"

      DATABASE_URL: "postgres://postgres:r44gru@128.199.14.226:5432/emsclinica"

      # entities no seu layout (sem 'infra')
      TYPEORM_ENTITIES: "src/modules/**/typeorm/entities/*.ts"
      TYPEORM_MIGRATIONS: "src/shared/typeorm/migrations/*.ts"
      TYPEORM_CLI_MIGRATIONS_DIR: "src/shared/typeorm/migrations"

    # se algum lugar usa 'db' hardcoded, resolve para o IP
    extra_hosts:
      - "db:128.199.14.226"

    # roda direto o TS; tsconfig-paths resolve @modules/@shared
    command: ["node","-r","ts-node/register","-r","tsconfig-paths/register","src/shared/http/server.ts"]

    ports:
      - "3333:3333"
    restart: unless-stopped
